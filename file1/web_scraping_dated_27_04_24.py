# -*- coding: utf-8 -*-
"""Web Scraping Dated - 27/04/24.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DCXJqnnwwqVwq99HjkEsZrAhkjwJT5Es

Q1) Write a python program to display IMDB’s Top rated 100 Indian movies’ data
https://www.imdb.com/list/ls056092300/ (i.e. name, rating, year ofrelease) and make data frame.
"""

import re
import requests
from bs4 import BeautifulSoup
import pandas as pd

def imdb_df(link):

  response = requests.get(link)

  soup = BeautifulSoup(response.content)

  # Name of the Movie

  name_films = soup.find_all('div', class_="lister-item-content")

  pattern = r'<a href="(.*)">(.*)</a>'

  movie_name =[]


  for i in name_films:
    x = i.find('a')
    s = re.search(pattern, str(x))
    movie_name.append(s.group(2))

  # Rating of the movie

  rating_films = soup.find_all('div', class_="ipl-rating-star small")

  pattern = r'>([0-9]\.?[0-9]?)<'

  movie_rating =[]


  for i in rating_films:
    x = i.find('span',class_="ipl-rating-star__rating" )
    s = re.search(pattern, str(x))
    movie_rating.append(s.group(1))

  # Year of release

  year_films = soup.find_all('h3', class_="lister-item-header")

  pattern = r'\(([0-9]{4})\)'

  movie_year = []

  for i in year_films:
    x = i.find('span', class_="lister-item-year text-muted unbold")
    s = re.search(pattern, str(x))
    movie_year.append(s.group(1))

  return pd.DataFrame({"Movie_Name": movie_name, "Movie_year": movie_year, "Movie_rating": movie_rating})

ans = imdb_df('https://www.imdb.com/list/ls056092300/')

ans.head()

"""Q2 and Q3 skipped as they were asked my the mentor to be skipped.

Q4) Write a python program to scrape details of all the posts from https://www.patreon.com/coreyms .Scrape the
heading, date, content and the likes for the video from the link for the youtube video from the post.

Q4 is also causing problem while scraping data, I have kept my trials as it is. Tried to access a lot div tags but nothing at the output.
"""

def func_Q4(link):

  response = requests.get(link)

  soup = BeautifulSoup(response.content)

<div class="sc-bBHxTw iloeMK"><span data-tag="post-title" elementtiming="post-title" class="sc-1cvoi1y-0 hxhWXn"><a href="/posts/python-youtube-37666379">Python YouTube API Tutorial: Getting Started - Creating an API Key and Querying the API</a></span></div>

<div class="sc-pn81yk-3 epdiLI"><div><div><div class="sc-bBHxTw iloeMK"><span data-tag="post-title" elementtiming="post-title" class="sc-1cvoi1y-0 hxhWXn"><a href="/posts/python-youtube-37666379">Python YouTube API Tutorial: Getting Started - Creating an API Key and Querying the API</a></span></div><div class="sc-lgu5zg-0 dXpjXs"><p class="sc-bqiRlB etUZPh sc-lgu5zg-1 bDqjCN"><span id="track-click"><a href="/posts/python-youtube-37666379" data-tag="post-published-at" class="sc-kfPuZi doifNG"><span>May 29, 2020</span></a></span></p></div></div><div class="sc-1kelcyo-0 cDNaZd"><div class="sc-jrQzAO iorWWT"><a href="/posts/python-youtube-37666379" aria-expanded="false" class="sc-kfPuZi koqBSe" aria-controls="cid-7">View post</a></div><div id="cid-7"><div><div class="sc-jrQzAO gnnDyW"><div class="sc-1cq1psq-0 kWkNqn sc-pn81yk-0 dBfLIG"><div class="sc-cfnzm4-0 daxSFj"><p>In this Python Programming Tutorial, we'll be learning how to use the YouTube API. We will learn how to create an API Key and connect to the YouTube API using Python. This will allow us to get public information from YouTube and do some analysis. In later videos, I will show how I use this API to grab useful information that might not be easily found on YouTube's site directly. Let's get started...</p></div></div></div></div></div></div></div><div data-tag="post-tags"><div class="sc-1m33ubw-0 kkDzLg"><div class="sc-pn81yk-1 fIwkbU"><div class="sc-1m33ubw-1 dnGltk"><a data-tag="post-tag" href="https://www.patreon.com/coreyms/posts?filters%5Btag%5D=api" class="sc-pn81yk-2 gBsYMQ"><p class="sc-bqiRlB vWGl">api</p></a></div><div class="sc-1m33ubw-1 dnGltk"><a data-tag="post-tag" href="https://www.patreon.com/coreyms/posts?filters%5Btag%5D=python" class="sc-pn81yk-2 gBsYMQ"><p class="sc-bqiRlB vWGl">python</p></a></div><div class="sc-1m33ubw-1 dnGltk"><a data-tag="post-tag" href="https://www.patreon.com/coreyms/posts?filters%5Btag%5D=youtube" class="sc-pn81yk-2 gBsYMQ"><p class="sc-bqiRlB vWGl">youtube</p></a></div><div class="sc-1m33ubw-1 dnGltk"><a data-tag="post-tag" href="https://www.patreon.com/coreyms/posts?filters%5Btag%5D=youtubeapi" class="sc-pn81yk-2 gBsYMQ"><p class="sc-bqiRlB vWGl">youtubeapi</p></a></div></div></div></div><div><div data-tag="post-details" class="sc-jrQzAO dVikLP"><div class="sc-jrQzAO cENdHk"><div class="sc-jrQzAO SLZLB"><button data-tag="like-button" aria-label="Like post. 6 likes" aria-checked="false" class="sc-fKVqWL cljpju"><div aria-hidden="true" class="sc-dkPtRN kBeyDw"><svg data-tag="IconHeart" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M21.75 9.188c0 2.933-1.897 5.886-4.064 8.106C15.52 19.514 13.082 21 12 21c-1.082 0-3.52-1.486-5.686-3.706-2.167-2.22-4.064-5.173-4.064-8.107 0-1.814.518-3.174 1.41-4.08.89-.905 2.156-1.357 3.653-1.357 1.663 0 2.628.75 3.28 1.5.653.75.993 1.5 1.407 1.5.414 0 .754-.75 1.407-1.5.652-.75 1.617-1.5 3.28-1.5 1.497 0 2.762.452 3.654 1.358.891.905 1.409 2.265 1.409 4.08"></path></svg></div><div class="sc-jrQzAO knZGTZ"><span data-tag="like-count" class="sc-bqiRlB etUZPh">6</span></div></button><a href="/posts/python-youtube-37666379" data-tag="comment-post-icon" aria-label="View comments" class="sc-kfPuZi jHnUDo"><div aria-hidden="true" class="sc-dkPtRN kBeyDw"><svg data-tag="IconBubble" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.685 21.75c-1.204-.001-1.605-.564-2.09-1.126C14.108 20.062 13.54 19.5 12 19.5c-2.864 0-5.114-.75-6.648-2.156C3.818 15.938 3 13.875 3 11.25c0-2.625.818-4.687 2.352-6.094C6.886 3.75 9.136 3 12 3s5.114.75 6.648 2.156C20.182 6.562 21 8.625 21 11.25c0 1.445-.249 2.718-.728 3.806a6.737 6.737 0 0 1-2.113 2.688c-.284.215-.51.488-.667.797a2.223 2.223 0 0 0-.242 1.007v1.64a.564.564 0 0 1-.565.563"></path></svg></div></a><button data-tag="share-post-icon" aria-label="Share" aria-expanded="false" class="sc-fKVqWL cljpju"><div aria-hidden="true" class="sc-dkPtRN kBeyDw"><svg data-tag="IconShare" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19.5 13.125v5.25c0 1.337-.175 2.181-.684 2.69-.51.51-1.354.685-2.691.685h-8.25c-1.337 0-2.181-.175-2.69-.684-.51-.51-.685-1.354-.685-2.69v-5.25c0-1.338.175-2.182.684-2.691.51-.51 1.354-.685 2.691-.685.446 0 .727.058.897.228.17.17.228.451.228.897s-.058.727-.228.897c-.17.17-.451.228-.897.228s-.727.059-.897.228c-.17.17-.228.451-.228.897v5.25c0 .446.058.727.228.897.17.17.451.228.897.228h8.25c.446 0 .727-.058.897-.228.17-.17.228-.451.228-.897v-5.25c0-.446-.058-.727-.228-.897-.17-.17-.451-.228-.897-.228s-.727-.058-.897-.228c-.17-.17-.228-.451-.228-.897s.058-.727.228-.897c.17-.17.451-.228.897-.228 1.337 0 2.181.175 2.69.685.51.509.685 1.353.685 2.69M8.817 7.775l.602-.603.602-.602c.22-.22.433-.287.592-.221.158.066.262.264.262.574v7.702c0 .45.056.731.225.9.17.169.45.225.9.225s.731-.056.9-.225c.169-.169.225-.45.225-.9V6.923c0-.31.104-.508.262-.574.159-.066.372.001.592.22l.602.603.602.602c.317.317.557.476.796.476s.478-.159.795-.476c.317-.317.476-.556.476-.795 0-.24-.159-.479-.476-.796l-1.99-1.989-1.988-1.99c-.318-.317-.557-.475-.796-.475s-.478.158-.795.476l-1.99 1.989-1.989 1.99c-.317.316-.476.556-.476.795s.159.478.476.795c.317.317.556.476.795.476.24 0 .479-.159.796-.476"></path></svg></div></button></div></div></div></div></div>

<span data-tag="post-title" elementtiming="post-title" class="sc-1cvoi1y-0 hxhWXn"><a href="/posts/python-youtube-37666379">Python YouTube API Tutorial: Getting Started - Creating an API Key and Querying the API</a></span>

<div class="sc-bUbRBg DYKxE"><div class="sc-pn81yk-3 gQZwKM"><div><div><div class="sc-bBHxTw iloeMK"><span data-tag="post-title" elementtiming="post-title" class="sc-1cvoi1y-0 hxhWXn">How to Use ChatGPT as a Powerful Tool for Programming</span></div><div class="sc-lgu5zg-0 dXpjXs"><p class="sc-bqiRlB etUZPh sc-lgu5zg-1 bDqjCN"><span id="track-click"><button data-tag="post-published-at" class="sc-fKVqWL cHPUtA"><span>May 21, 2023</span></button></span></p></div></div><div class="sc-1kelcyo-0 cDNaZd"><div id="cid-4"><div><div class="sc-jrQzAO gnnDyW"><div class="sc-1cq1psq-0 kWkNqn sc-pn81yk-0 dBfLIG"><div class="sc-cfnzm4-0 daxSFj"></div></div></div></div></div></div></div><div class="sc-jrQzAO bmnjsr"><a aria-disabled="false" href="/login?ru=%2Fposts%2Fhow-to-use-as-83336794%3Fimmediate_pledge_flow%3Dtrue" role="link" data-tag="join-button" class="sc-furwcr bSvmdW"><div class="sc-gKclnd cidWcZ"><div aria-hidden="true" class="sc-dkPtRN bkwUdo"><svg data-tag="IconLock" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.238 8.458c-.865-.19-1.3-.289-1.518-.568-.218-.279-.22-.74-.22-1.653V6a4.486 4.486 0 0 0-1.318-3.182A4.486 4.486 0 0 0 12 1.5a4.486 4.486 0 0 0-3.182 1.318A4.486 4.486 0 0 0 7.5 6v.237c0 .914-.002 1.374-.22 1.653-.219.28-.653.378-1.518.568-1.005.221-1.508.678-1.76 1.622-.252.944-.252 2.376-.252 4.545 0 3.188 0 4.781.797 5.578.797.797 2.39.797 5.578.797h3.75c3.188 0 4.781 0 5.578-.797.797-.797.797-2.39.797-5.578 0-2.17 0-3.6-.252-4.545-.252-.944-.755-1.4-1.76-1.622M12 8.25c-1.117 0-1.68-.004-1.963-.287C9.755 7.679 9.75 7.117 9.75 6c0-.621.252-1.184.659-1.591.407-.407.97-.659 1.591-.659s1.184.252 1.591.659c.407.407.659.97.659 1.591 0 1.117-.004 1.68-.287 1.963-.284.283-.846.287-1.963.287"></path></svg></div><div class="sc-iCfMLu MQiBs">Join to unlock</div></div></a></div><div><div data-tag="post-details" class="sc-jrQzAO dVikLP"><div class="sc-jrQzAO cENdHk"><div class="sc-jrQzAO SLZLB"><button data-tag="like-button" aria-label="Like post. 2 likes" aria-checked="false" class="sc-fKVqWL cljpju"><div aria-hidden="true" class="sc-dkPtRN kBeyDw"><svg data-tag="IconHeart" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M21.75 9.188c0 2.933-1.897 5.886-4.064 8.106C15.52 19.514 13.082 21 12 21c-1.082 0-3.52-1.486-5.686-3.706-2.167-2.22-4.064-5.173-4.064-8.107 0-1.814.518-3.174 1.41-4.08.89-.905 2.156-1.357 3.653-1.357 1.663 0 2.628.75 3.28 1.5.653.75.993 1.5 1.407 1.5.414 0 .754-.75 1.407-1.5.652-.75 1.617-1.5 3.28-1.5 1.497 0 2.762.452 3.654 1.358.891.905 1.409 2.265 1.409 4.08"></path></svg></div><div class="sc-jrQzAO knZGTZ"><span data-tag="like-count" class="sc-bqiRlB etUZPh">2</span></div></button><a href="/posts/how-to-use-as-83336794" data-tag="comment-post-icon" aria-label="View comments" class="sc-kfPuZi jHnUDo"><div aria-hidden="true" class="sc-dkPtRN kBeyDw"><svg data-tag="IconBubble" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.685 21.75c-1.204-.001-1.605-.564-2.09-1.126C14.108 20.062 13.54 19.5 12 19.5c-2.864 0-5.114-.75-6.648-2.156C3.818 15.938 3 13.875 3 11.25c0-2.625.818-4.687 2.352-6.094C6.886 3.75 9.136 3 12 3s5.114.75 6.648 2.156C20.182 6.562 21 8.625 21 11.25c0 1.445-.249 2.718-.728 3.806a6.737 6.737 0 0 1-2.113 2.688c-.284.215-.51.488-.667.797a2.223 2.223 0 0 0-.242 1.007v1.64a.564.564 0 0 1-.565.563"></path></svg></div></a><button data-tag="share-post-icon" aria-label="Share" aria-expanded="false" class="sc-fKVqWL cljpju"><div aria-hidden="true" class="sc-dkPtRN kBeyDw"><svg data-tag="IconShare" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19.5 13.125v5.25c0 1.337-.175 2.181-.684 2.69-.51.51-1.354.685-2.691.685h-8.25c-1.337 0-2.181-.175-2.69-.684-.51-.51-.685-1.354-.685-2.69v-5.25c0-1.338.175-2.182.684-2.691.51-.51 1.354-.685 2.691-.685.446 0 .727.058.897.228.17.17.228.451.228.897s-.058.727-.228.897c-.17.17-.451.228-.897.228s-.727.059-.897.228c-.17.17-.228.451-.228.897v5.25c0 .446.058.727.228.897.17.17.451.228.897.228h8.25c.446 0 .727-.058.897-.228.17-.17.228-.451.228-.897v-5.25c0-.446-.058-.727-.228-.897-.17-.17-.451-.228-.897-.228s-.727-.058-.897-.228c-.17-.17-.228-.451-.228-.897s.058-.727.228-.897c.17-.17.451-.228.897-.228 1.337 0 2.181.175 2.69.685.51.509.685 1.353.685 2.69M8.817 7.775l.602-.603.602-.602c.22-.22.433-.287.592-.221.158.066.262.264.262.574v7.702c0 .45.056.731.225.9.17.169.45.225.9.225s.731-.056.9-.225c.169-.169.225-.45.225-.9V6.923c0-.31.104-.508.262-.574.159-.066.372.001.592.22l.602.603.602.602c.317.317.557.476.796.476s.478-.159.795-.476c.317-.317.476-.556.476-.795 0-.24-.159-.479-.476-.796l-1.99-1.989-1.988-1.99c-.318-.317-.557-.475-.796-.475s-.478.158-.795.476l-1.99 1.989-1.989 1.99c-.317.316-.476.556-.476.795s.159.478.476.795c.317.317.556.476.795.476.24 0 .479-.159.796-.476"></path></svg></div></button></div></div><button data-tag="locked-badge-button" aria-expanded="false" class="sc-fKVqWL cljpju"><div class="sc-eyssi2-0 fbpFeN"><div aria-hidden="true" class="sc-dkPtRN jWyGEF"><svg data-tag="IconLock" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.238 8.458c-.865-.19-1.3-.289-1.518-.568-.218-.279-.22-.74-.22-1.653V6a4.486 4.486 0 0 0-1.318-3.182A4.486 4.486 0 0 0 12 1.5a4.486 4.486 0 0 0-3.182 1.318A4.486 4.486 0 0 0 7.5 6v.237c0 .914-.002 1.374-.22 1.653-.219.28-.653.378-1.518.568-1.005.221-1.508.678-1.76 1.622-.252.944-.252 2.376-.252 4.545 0 3.188 0 4.781.797 5.578.797.797 2.39.797 5.578.797h3.75c3.188 0 4.781 0 5.578-.797.797-.797.797-2.39.797-5.578 0-2.17 0-3.6-.252-4.545-.252-.944-.755-1.4-1.76-1.622M12 8.25c-1.117 0-1.68-.004-1.963-.287C9.755 7.679 9.75 7.117 9.75 6c0-.621.252-1.184.659-1.591.407-.407.97-.659 1.591-.659s1.184.252 1.591.659c.407.407.659.97.659 1.591 0 1.117-.004 1.68-.287 1.963-.284.283-.846.287-1.963.287"></path></svg></div><div class="sc-pr0f0g-0 gqVWhu"><div class="sc-eyssi2-1 jRWDHs"><div class="sc-jrQzAO cRQVjf"></div><p class="sc-iqseJM faiBYt">Locked</p></div></div><div class="sc-jrQzAO cRQVjf"></div></div></button></div></div></div></div>

<div class="sc-1g6snea-0"><div class="sc-jrQzAO dlgpcw"><div elevation="subtle" class="sc-bUbRBg sc-tAExr eXwlof cIqsGr"><figure title="video thumbnail" class="sc-1cxu7e7-4 eMGksJ"><div data-tag="media-container" class="sc-1cxu7e7-2 bHfZRD"><img src="https://www.patreon.com/media-u/Z0FBQUFBQm1MUE15X1RIcVlsQzdhMXpLRE1nNWdQQlZnUEJWa2tXNE9CV0dKOXVHWnFIYnluVkNkM1JVZjR3ckZEaUtiYV9CM0p4N0h6Q0duNnozSS1xY2s0Rm82UzFQTllvMEQzNEtBRHZ1VkdYRllkOUZ6WHhBTkdKcm45eXlvTkxSMVZ1aVh1b0drMHc3amNBUW1GWF84NThLLTczcldBPT0=#57075867_620_None" alt="" class="sc-1cxu7e7-3 leicDv"><div class="sc-1cxu7e7-1 kemZHI middle-xs center-xs"><button title="Start playback" class="sc-1cxu7e7-0 mIgro" fdprocessedid="qqmkgl"><div aria-hidden="true" class="sc-dkPtRN ggPOcI"><svg data-tag="IconBrandYoutube" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11.994 5s-6.251 0-7.82.408a2.585 2.585 0 0 0-1.766 1.778C2 8.756 2 12.004 2 12.004s0 3.262.408 4.806a2.545 2.545 0 0 0 1.766 1.766c1.581.42 7.82.42 7.82.42s6.263 0 7.832-.407a2.485 2.485 0 0 0 1.754-1.767c.42-1.556.42-4.805.42-4.805s.012-3.262-.42-4.83a2.47 2.47 0 0 0-1.754-1.755C18.257 5 11.994 5 11.994 5m-1.99 4.003 5.202 3.001-5.201 2.99z"></path></svg></div></button></div></div></figure><div class="sc-bUbRBg DYKxE"><div class="sc-pn81yk-3 epdiLI"><div><div><div class="sc-bBHxTw iloeMK"><span data-tag="post-title" elementtiming="post-title" class="sc-1cvoi1y-0 hxhWXn"><a href="/posts/python-pandas-10-34979898">Python Pandas Tutorial (Part 10): Working with Dates and Time Series Data</a></span></div><div class="sc-lgu5zg-0 dXpjXs"><p class="sc-bqiRlB etUZPh sc-lgu5zg-1 bDqjCN"><span id="track-click"><a href="/posts/python-pandas-10-34979898" data-tag="post-published-at" class="sc-kfPuZi doifNG"><span>Mar 18, 2020</span></a></span></p></div></div><div class="sc-1kelcyo-0 cDNaZd"><div class="sc-jrQzAO iorWWT"><a href="/posts/python-pandas-10-34979898" aria-expanded="false" class="sc-kfPuZi koqBSe" aria-controls="cid-12">View post</a></div><div id="cid-12"><div><div class="sc-jrQzAO gnnDyW"><div class="sc-1cq1psq-0 kWkNqn sc-pn81yk-0 dBfLIG"><div class="sc-cfnzm4-0 daxSFj"><p>In this Python Programming video, we will be learning several different concepts about working with DateTimes and Time Series data in Pandas. We will learn how to convert values to datetimes, how to filter by dates, how to resample our dates to do some more in-depth analysis, and more. Let's get started...</p></div></div></div></div></div></div></div><div data-tag="post-tags"><div class="sc-1m33ubw-0 kkDzLg"><div class="sc-pn81yk-1 fIwkbU"><div class="sc-1m33ubw-1 dnGltk"><a data-tag="post-tag" href="https://www.patreon.com/coreyms/posts?filters%5Btag%5D=data+analysis" class="sc-pn81yk-2 gBsYMQ"><p class="sc-bqiRlB vWGl">data analysis</p></a></div><div class="sc-1m33ubw-1 dnGltk"><a data-tag="post-tag" href="https://www.patreon.com/coreyms/posts?filters%5Btag%5D=data+science" class="sc-pn81yk-2 gBsYMQ"><p class="sc-bqiRlB vWGl">data science</p></a></div><div class="sc-1m33ubw-1 dnGltk"><a data-tag="post-tag" href="https://www.patreon.com/coreyms/posts?filters%5Btag%5D=pandas" class="sc-pn81yk-2 gBsYMQ"><p class="sc-bqiRlB vWGl">pandas</p></a></div><div class="sc-1m33ubw-1 dnGltk"><a data-tag="post-tag" href="https://www.patreon.com/coreyms/posts?filters%5Btag%5D=python" class="sc-pn81yk-2 gBsYMQ"><p class="sc-bqiRlB vWGl">python</p></a></div><div class="sc-1m33ubw-1 dnGltk"><a data-tag="post-tag" href="https://www.patreon.com/coreyms/posts?filters%5Btag%5D=time+series" class="sc-pn81yk-2 gBsYMQ"><p class="sc-bqiRlB vWGl">time series</p></a></div></div></div></div><div><div data-tag="post-details" class="sc-jrQzAO dVikLP"><div class="sc-jrQzAO cENdHk"><div class="sc-jrQzAO SLZLB"><button data-tag="like-button" aria-label="Like post. 2 likes" aria-checked="false" class="sc-fKVqWL cljpju" fdprocessedid="16m25d"><div aria-hidden="true" class="sc-dkPtRN kBeyDw"><svg data-tag="IconHeart" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M21.75 9.188c0 2.933-1.897 5.886-4.064 8.106C15.52 19.514 13.082 21 12 21c-1.082 0-3.52-1.486-5.686-3.706-2.167-2.22-4.064-5.173-4.064-8.107 0-1.814.518-3.174 1.41-4.08.89-.905 2.156-1.357 3.653-1.357 1.663 0 2.628.75 3.28 1.5.653.75.993 1.5 1.407 1.5.414 0 .754-.75 1.407-1.5.652-.75 1.617-1.5 3.28-1.5 1.497 0 2.762.452 3.654 1.358.891.905 1.409 2.265 1.409 4.08"></path></svg></div><div class="sc-jrQzAO knZGTZ"><span data-tag="like-count" class="sc-bqiRlB etUZPh">2</span></div></button><a href="/posts/python-pandas-10-34979898" data-tag="comment-post-icon" aria-label="View comments" class="sc-kfPuZi jHnUDo"><div aria-hidden="true" class="sc-dkPtRN kBeyDw"><svg data-tag="IconBubble" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.685 21.75c-1.204-.001-1.605-.564-2.09-1.126C14.108 20.062 13.54 19.5 12 19.5c-2.864 0-5.114-.75-6.648-2.156C3.818 15.938 3 13.875 3 11.25c0-2.625.818-4.687 2.352-6.094C6.886 3.75 9.136 3 12 3s5.114.75 6.648 2.156C20.182 6.562 21 8.625 21 11.25c0 1.445-.249 2.718-.728 3.806a6.737 6.737 0 0 1-2.113 2.688c-.284.215-.51.488-.667.797a2.223 2.223 0 0 0-.242 1.007v1.64a.564.564 0 0 1-.565.563"></path></svg></div><p class="sc-bqiRlB etUZPh">1</p></a><button data-tag="share-post-icon" aria-label="Share" aria-expanded="false" class="sc-fKVqWL cljpju" fdprocessedid="7fv0yp"><div aria-hidden="true" class="sc-dkPtRN kBeyDw"><svg data-tag="IconShare" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19.5 13.125v5.25c0 1.337-.175 2.181-.684 2.69-.51.51-1.354.685-2.691.685h-8.25c-1.337 0-2.181-.175-2.69-.684-.51-.51-.685-1.354-.685-2.69v-5.25c0-1.338.175-2.182.684-2.691.51-.51 1.354-.685 2.691-.685.446 0 .727.058.897.228.17.17.228.451.228.897s-.058.727-.228.897c-.17.17-.451.228-.897.228s-.727.059-.897.228c-.17.17-.228.451-.228.897v5.25c0 .446.058.727.228.897.17.17.451.228.897.228h8.25c.446 0 .727-.058.897-.228.17-.17.228-.451.228-.897v-5.25c0-.446-.058-.727-.228-.897-.17-.17-.451-.228-.897-.228s-.727-.058-.897-.228c-.17-.17-.228-.451-.228-.897s.058-.727.228-.897c.17-.17.451-.228.897-.228 1.337 0 2.181.175 2.69.685.51.509.685 1.353.685 2.69M8.817 7.775l.602-.603.602-.602c.22-.22.433-.287.592-.221.158.066.262.264.262.574v7.702c0 .45.056.731.225.9.17.169.45.225.9.225s.731-.056.9-.225c.169-.169.225-.45.225-.9V6.923c0-.31.104-.508.262-.574.159-.066.372.001.592.22l.602.603.602.602c.317.317.557.476.796.476s.478-.159.795-.476c.317-.317.476-.556.476-.795 0-.24-.159-.479-.476-.796l-1.99-1.989-1.988-1.99c-.318-.317-.557-.475-.796-.475s-.478.158-.795.476l-1.99 1.989-1.989 1.99c-.317.316-.476.556-.476.795s.159.478.476.795c.317.317.556.476.795.476.24 0 .479-.159.796-.476"></path></svg></div></button></div></div></div></div></div></div></div></div></div>

<div class="sc-jrQzAO dlgpcw"><div elevation="subtle" class="sc-bUbRBg sc-tAExr eXwlof cIqsGr"><figure title="video thumbnail" class="sc-1cxu7e7-4 eMGksJ"><div data-tag="media-container" class="sc-1cxu7e7-2 bHfZRD"><img src="https://www.patreon.com/media-u/Z0FBQUFBQm1MUE15X1RIcVlsQzdhMXpLRE1nNWdQQlZnUEJWa2tXNE9CV0dKOXVHWnFIYnluVkNkM1JVZjR3ckZEaUtiYV9CM0p4N0h6Q0duNnozSS1xY2s0Rm82UzFQTllvMEQzNEtBRHZ1VkdYRllkOUZ6WHhBTkdKcm45eXlvTkxSMVZ1aVh1b0drMHc3amNBUW1GWF84NThLLTczcldBPT0=#57075867_620_None" alt="" class="sc-1cxu7e7-3 leicDv"><div class="sc-1cxu7e7-1 kemZHI middle-xs center-xs"><button title="Start playback" class="sc-1cxu7e7-0 mIgro" fdprocessedid="qqmkgl"><div aria-hidden="true" class="sc-dkPtRN ggPOcI"><svg data-tag="IconBrandYoutube" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11.994 5s-6.251 0-7.82.408a2.585 2.585 0 0 0-1.766 1.778C2 8.756 2 12.004 2 12.004s0 3.262.408 4.806a2.545 2.545 0 0 0 1.766 1.766c1.581.42 7.82.42 7.82.42s6.263 0 7.832-.407a2.485 2.485 0 0 0 1.754-1.767c.42-1.556.42-4.805.42-4.805s.012-3.262-.42-4.83a2.47 2.47 0 0 0-1.754-1.755C18.257 5 11.994 5 11.994 5m-1.99 4.003 5.202 3.001-5.201 2.99z"></path></svg></div></button></div></div></figure><div class="sc-bUbRBg DYKxE"><div class="sc-pn81yk-3 epdiLI"><div><div><div class="sc-bBHxTw iloeMK"><span data-tag="post-title" elementtiming="post-title" class="sc-1cvoi1y-0 hxhWXn"><a href="/posts/python-pandas-10-34979898">Python Pandas Tutorial (Part 10): Working with Dates and Time Series Data</a></span></div><div class="sc-lgu5zg-0 dXpjXs"><p class="sc-bqiRlB etUZPh sc-lgu5zg-1 bDqjCN"><span id="track-click"><a href="/posts/python-pandas-10-34979898" data-tag="post-published-at" class="sc-kfPuZi doifNG"><span>Mar 18, 2020</span></a></span></p></div></div><div class="sc-1kelcyo-0 cDNaZd"><div class="sc-jrQzAO iorWWT"><a href="/posts/python-pandas-10-34979898" aria-expanded="false" class="sc-kfPuZi koqBSe" aria-controls="cid-12">View post</a></div><div id="cid-12"><div><div class="sc-jrQzAO gnnDyW"><div class="sc-1cq1psq-0 kWkNqn sc-pn81yk-0 dBfLIG"><div class="sc-cfnzm4-0 daxSFj"><p>In this Python Programming video, we will be learning several different concepts about working with DateTimes and Time Series data in Pandas. We will learn how to convert values to datetimes, how to filter by dates, how to resample our dates to do some more in-depth analysis, and more. Let's get started...</p></div></div></div></div></div></div></div><div data-tag="post-tags"><div class="sc-1m33ubw-0 kkDzLg"><div class="sc-pn81yk-1 fIwkbU"><div class="sc-1m33ubw-1 dnGltk"><a data-tag="post-tag" href="https://www.patreon.com/coreyms/posts?filters%5Btag%5D=data+analysis" class="sc-pn81yk-2 gBsYMQ"><p class="sc-bqiRlB vWGl">data analysis</p></a></div><div class="sc-1m33ubw-1 dnGltk"><a data-tag="post-tag" href="https://www.patreon.com/coreyms/posts?filters%5Btag%5D=data+science" class="sc-pn81yk-2 gBsYMQ"><p class="sc-bqiRlB vWGl">data science</p></a></div><div class="sc-1m33ubw-1 dnGltk"><a data-tag="post-tag" href="https://www.patreon.com/coreyms/posts?filters%5Btag%5D=pandas" class="sc-pn81yk-2 gBsYMQ"><p class="sc-bqiRlB vWGl">pandas</p></a></div><div class="sc-1m33ubw-1 dnGltk"><a data-tag="post-tag" href="https://www.patreon.com/coreyms/posts?filters%5Btag%5D=python" class="sc-pn81yk-2 gBsYMQ"><p class="sc-bqiRlB vWGl">python</p></a></div><div class="sc-1m33ubw-1 dnGltk"><a data-tag="post-tag" href="https://www.patreon.com/coreyms/posts?filters%5Btag%5D=time+series" class="sc-pn81yk-2 gBsYMQ"><p class="sc-bqiRlB vWGl">time series</p></a></div></div></div></div><div><div data-tag="post-details" class="sc-jrQzAO dVikLP"><div class="sc-jrQzAO cENdHk"><div class="sc-jrQzAO SLZLB"><button data-tag="like-button" aria-label="Like post. 2 likes" aria-checked="false" class="sc-fKVqWL cljpju" fdprocessedid="16m25d"><div aria-hidden="true" class="sc-dkPtRN kBeyDw"><svg data-tag="IconHeart" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M21.75 9.188c0 2.933-1.897 5.886-4.064 8.106C15.52 19.514 13.082 21 12 21c-1.082 0-3.52-1.486-5.686-3.706-2.167-2.22-4.064-5.173-4.064-8.107 0-1.814.518-3.174 1.41-4.08.89-.905 2.156-1.357 3.653-1.357 1.663 0 2.628.75 3.28 1.5.653.75.993 1.5 1.407 1.5.414 0 .754-.75 1.407-1.5.652-.75 1.617-1.5 3.28-1.5 1.497 0 2.762.452 3.654 1.358.891.905 1.409 2.265 1.409 4.08"></path></svg></div><div class="sc-jrQzAO knZGTZ"><span data-tag="like-count" class="sc-bqiRlB etUZPh">2</span></div></button><a href="/posts/python-pandas-10-34979898" data-tag="comment-post-icon" aria-label="View comments" class="sc-kfPuZi jHnUDo"><div aria-hidden="true" class="sc-dkPtRN kBeyDw"><svg data-tag="IconBubble" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.685 21.75c-1.204-.001-1.605-.564-2.09-1.126C14.108 20.062 13.54 19.5 12 19.5c-2.864 0-5.114-.75-6.648-2.156C3.818 15.938 3 13.875 3 11.25c0-2.625.818-4.687 2.352-6.094C6.886 3.75 9.136 3 12 3s5.114.75 6.648 2.156C20.182 6.562 21 8.625 21 11.25c0 1.445-.249 2.718-.728 3.806a6.737 6.737 0 0 1-2.113 2.688c-.284.215-.51.488-.667.797a2.223 2.223 0 0 0-.242 1.007v1.64a.564.564 0 0 1-.565.563"></path></svg></div><p class="sc-bqiRlB etUZPh">1</p></a><button data-tag="share-post-icon" aria-label="Share" aria-expanded="false" class="sc-fKVqWL cljpju" fdprocessedid="7fv0yp"><div aria-hidden="true" class="sc-dkPtRN kBeyDw"><svg data-tag="IconShare" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19.5 13.125v5.25c0 1.337-.175 2.181-.684 2.69-.51.51-1.354.685-2.691.685h-8.25c-1.337 0-2.181-.175-2.69-.684-.51-.51-.685-1.354-.685-2.69v-5.25c0-1.338.175-2.182.684-2.691.51-.51 1.354-.685 2.691-.685.446 0 .727.058.897.228.17.17.228.451.228.897s-.058.727-.228.897c-.17.17-.451.228-.897.228s-.727.059-.897.228c-.17.17-.228.451-.228.897v5.25c0 .446.058.727.228.897.17.17.451.228.897.228h8.25c.446 0 .727-.058.897-.228.17-.17.228-.451.228-.897v-5.25c0-.446-.058-.727-.228-.897-.17-.17-.451-.228-.897-.228s-.727-.058-.897-.228c-.17-.17-.228-.451-.228-.897s.058-.727.228-.897c.17-.17.451-.228.897-.228 1.337 0 2.181.175 2.69.685.51.509.685 1.353.685 2.69M8.817 7.775l.602-.603.602-.602c.22-.22.433-.287.592-.221.158.066.262.264.262.574v7.702c0 .45.056.731.225.9.17.169.45.225.9.225s.731-.056.9-.225c.169-.169.225-.45.225-.9V6.923c0-.31.104-.508.262-.574.159-.066.372.001.592.22l.602.603.602.602c.317.317.557.476.796.476s.478-.159.795-.476c.317-.317.476-.556.476-.795 0-.24-.159-.479-.476-.796l-1.99-1.989-1.988-1.99c-.318-.317-.557-.475-.796-.475s-.478.158-.795.476l-1.99 1.989-1.989 1.99c-.317.316-.476.556-.476.795s.159.478.476.795c.317.317.556.476.795.476.24 0 .479-.159.796-.476"></path></svg></div></button></div></div></div></div></div></div></div></div>

response = requests.get('https://www.patreon.com/coreyms')

soup = BeautifulSoup(response.content)

name_films = soup.find_all('div', class_="sc-1g6snea-0")

print(name_films)

pattern = r'<a href="(.*)">(.*)</a>'

for i in name_films:
  x = i.find('div', class_='sc-jrQzAO dlgpcw')
  print(x)
  #s = re.search(pattern, str(x))
  #movie_name.append(s.group(2))

"""Q5) Write a python program to scrape house details from mentioned URL. It should include house title, location,
area, EMI and price from https://www.nobroker.in/ .Enter three localities which are Indira Nagar, Jayanagar,
Rajaji Nagar.
"""

import pandas as pd
import re
import requests
from bs4 import BeautifulSoup

def broker_df(link):

  response = requests.get(link)

  soup = BeautifulSoup(response.content)

  # Prices

  pattern = r'<span.*->(.*)</span>'

  name_prices = soup.find_all('div', class_="flex flex-col w-33pe items-center bo tp:w-half po:w-full border-r border-r-solid border-card-overview-border-color last:border-r-1")

  prices = []

  for i in name_prices:
    x = i.find('span')
    s = re.search(pattern, str(x))
    if s :
      prices.append(s.group(1))

  # Emi

  pattern = r'<span>₹</span>(.*)</div>'

  name_emi = soup.find_all('div', class_="flex flex-col w-33pe items-center bo tp:w-half po:w-full border-r border-r-solid border-card-overview-border-color last:border-r-1")

  emi = []

  for i in name_emi:
    x = i.find('div', class_='font-semi-bold heading-6')
    s = re.search(pattern, str(x))
    if s:
      emi.append(s.group(1))

  # Area

  pattern = r'<div.*>(.*)</div>'

  area=[]

  name_area = soup.find_all('div', class_="flex flex-col w-33pe items-center tp:w-half po:w-full")

  for i in name_area:
    x = i.find('div', class_='flex')
    s = re.search(pattern, str(x))
    if s:
      area.append(s.group(1))

  # Location

  pattern = r'<div.*>(.*)</div>'

  location = []

  name_location = soup.find_all('div', class_="mt-0.5p overflow-hidden overflow-ellipsis whitespace-nowrap max-w-70 text-gray-light leading-4 po:mb-0.1p po:max-w-95")

  for i in name_location:
    s = re.search(pattern, str(i))
    if s:
      location.append(s.group(1))

  # Title

  pattern = r'<a.*>(.*)</a>'

  title = []

  name_title = soup.find_all('a', class_="overflow-hidden overflow-ellipsis whitespace-nowrap max-w-80pe po:max-w-full")

  for i in name_title:
    s = re.search(pattern, str(i))
    if s:
      title.append(s.group(1))

  return pd.DataFrame({"Title":title, "Location": location, "Cost": prices, "Area": area, "Emi" :emi})

ans = broker_df('https://www.nobroker.in/property/sale/bangalore/multiple?searchParam=W3sibGF0IjoxMi45MzA3NzM1LCJsb24iOjc3LjU4MzgzMDIsInBsYWNlSWQiOiJDaElKMmRkbFo1Z1ZyanNSaDFCT0FhZi1vcnMiLCJwbGFjZU5hbWUiOiJKYXlhbmFnYXIifSx7ImxhdCI6MTIuOTc4MzY5MiwibG9uIjo3Ny42NDA4MzU2LCJwbGFjZUlkIjoiQ2hJSmtRTjNHS1FXcmpzUk5oQlFKcmhHRDdVIiwicGxhY2VOYW1lIjoiSW5kaXJhbmFnYXIifSx7ImxhdCI6MTIuOTk4MTczMiwibG9uIjo3Ny41NTMwNDQ1OTk5OTk5OSwicGxhY2VJZCI6IkNoSUp4Zlc0RFBNOXJqc1JLc05URy01cF9RUSIsInBsYWNlTmFtZSI6IlJhamFqaW5hZ2FyIn1d&radius=2.0&city=bangalore&locality=Jayanagar,Indiranagar,Rajajinagar')

ans.head()

"""Q6) Write a python program to scrape first 10 product details which include product name , price , Image URL from
https://www.bewakoof.com/bestseller?sort=popular .
"""

def shop_df(link):

  response = requests.get('https://www.bewakoof.com/bestseller?sort=popular')

  soup = BeautifulSoup(response.content)

  # Name

  pattern = r'<h2.*>(.*)</h2>'

  name_clothes = soup.find_all('div', class_="productNaming bkf-ellipsis")

  names = []

  for i in name_clothes:
    x = i.find('h2')
    s = re.search(pattern, str(x))
    if s :
      names.append(s.group(1))

  # Price

  pattern = r'<div.*>(.*)</div>'

  name_price = soup.find_all('div', class_="discountedPriceText clr-p-black false")

  price = []

  for i in name_price:
    s = re.search(pattern, str(i))
    if s :
      price.append(s.group(1))

  # Img URL

  pattern = r'src=(.*) title'

  name_img = soup.find_all('img', class_="productImgTag")

  img = []

  for i in name_img:
    s = re.search(pattern, str(i))
    if s :
      img.append(s.group(1))

  return pd.DataFrame({"Name": names, "Price": price, "Img URL": img})

ans = shop_df('https://www.bewakoof.com/bestseller?sort=popular')

ans.head()

"""Q7) Please visit https://www.cnbc.com/world/?region=world and scrape
a) headings
b) date
c) News link
"""

def news_df(link):

  response = requests.get(link)

  soup = BeautifulSoup(response.content)

  # News Link

  pattern = r'(https.*)">.*</a>'

  name_films = soup.find_all('div', class_="RiverPlusCard-cardLeft")

  news_link = []

  for i in name_films:
    x = i.find('a')
    s = re.search(pattern, str(x))
    if s :
      news_link.append(s.group(1))


  # Headings

  headings = []

  for i in news_link:
    response = requests.get(i)
    soup = BeautifulSoup(response.content)

    head = soup.find_all('h1', class_= 'ArticleHeader-headline')

    pattern = r'>(.*)</h1>'

    for j in head:
      s = re.search(pattern, str(j))
      if s:
        headings.append(s.group(1))


  # Date

  date = []

  for i in news_link:
    response = requests.get(i)
    soup = BeautifulSoup(response.content)

    head = soup.find_all('div', class_= 'ArticleHeader-headerContentContainer')

    pattern = r'>.*, (.*)<span class="ArticleHeader-datetimeDivider"'

    for j in head:
      s = re.search(pattern, str(j))
      if s:
        date.append(s.group(1))

  return news_link,headings,date

ans1, ans2, ans3 = news_df('https://www.cnbc.com/world/?region=world')

print(ans1)
print(ans2)
print(ans3)

"""Q8) Please visit https://www.keaipublishing.com/en/journals/artificial-intelligence-in-agriculture/most-downloadedarticles/ and scrap-
 a) Paper title
 b) date
 c) Author

The link shows 404 error hence I used to link with the articles
"""

def ai_df(link):
  response = requests.get(link)

  soup = BeautifulSoup(response.content)

  # Paper Title

  pattern = r'>\n(.*)\n</a>'

  name_title = soup.find_all('h2', class_="h5 article-title")

  ai_link = []

  for i in name_title:
    x = i.find('a')
    ai_link.append(str(x))

  new_ai_link = []
  for i in ai_link:
    new_ai_link.append(" ".join(i.split()))

  new_ai_title = []
  pattern = r'>(.*)</a>'
  for i in new_ai_link:
    s = re.search(pattern, str(i))
    if s:
      new_ai_title.append(s.group(1))

  # Date

  article_date = []

  pattern = r'(January|February|March|April|May|June|July|August|September|October|November|December) (\d{4})'
  name_date = soup.find_all('p', class_="article-date")

  for i in name_date:
    s = re.search(pattern, str(i))
    article_date.append(s.group(1)+ " " +s.group(2))

  # Authors

  article_author=[]

  pattern = r'>(.*)</p>'

  name_author = soup.find_all('p', class_='article-authors')

  for i in name_author:
    s = re.search(pattern, str(i))
    if s:
      article_author.append(s.group(1))

  return pd.DataFrame({'Title': new_ai_title, 'Date': article_date, 'Authors': article_author})

ans = ai_df('https://www.keaipublishing.com/en/journals/artificial-intelligence-in-agriculture/recent-articles/')

ans.head()

